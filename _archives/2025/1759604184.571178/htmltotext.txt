 {"version":3,"file":"initCustomElements.inline.7d4e7d14.bundle.min.js","mappings":"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","sources":["webpack:///../../../node_modules/@wix/animations-kit/dist/esm/definitions/mediaResizeMap.js","webpack:///../../../node_modules/@wix/image/dist/esm/custom-element/utils.js","webpack:///../../../node_modules/@wix/image/dist/esm/custom-element/imageLayout.js","webpack:///../../../node_modules/@wix/image/dist/esm/custom-element/WowImage.js","webpack:///../../../node_modules/@wix/image/dist/esm/customElementInit.js","webpack:///../../../node_modules/@wix/image/dist/esm/custom-element/registry.js","webpack:///../../../node_modules/@wix/wow-utils/dist/esm/utils/math-and-numbers.js"],"sourcesContent":["import { deg2rad } from '@wix/wow-utils';\nconst getMediaDimensions = (width, height) => ({\n    width,\n    height,\n});\nconst getFullHeightMedia = (width, height, screenHeight) => ({\n    width,\n    height: Math.max(height, screenHeight),\n});\nfunction getMaxRotateBounds(width, height, angleInDeg) {\n    const angleInRad = deg2rad(angleInDeg);\n    const radius = Math.hypot(width, height) / 2;\n    const travelAngle = Math.acos(width / 2 / radius);\n    const boundingWidth = width * Math.abs(Math.cos(angleInRad)) +\n        height * Math.abs(Math.sin(angleInRad));\n    const boundingHeight = width * Math.abs(Math.sin(angleInRad)) +\n        height * Math.abs(Math.cos(angleInRad));\n    const minimalWidth = Math.ceil(angleInRad < travelAngle ? boundingWidth : radius * 2);\n    const minimalHeight = Math.ceil(angleInRad < deg2rad(90) - travelAngle ? boundingHeight : radius * 2);\n    return { width: minimalWidth, height: minimalHeight };\n}\nfunction getMaxSkewYBounds(width, height, angleInDeg) {\n    const angleInRad = deg2rad(angleInDeg);\n    return { width, height: width * Math.tan(angleInRad) + height };\n}\nconst panSpeed = 0.2;\nconst rotateAngle = 22;\nconst skewAngle = 20;\nconst zoomScale = 1.15;\nconst IMAGE_PARALLAX_HEIGHT_FACTOR = 1.5;\nconst BackgroundParallax = {\n    hasParallax: true,\n    getMediaDimensions: getFullHeightMedia,\n};\nconst BackgroundParallaxZoom = {\n    hasParallax: true,\n    getMediaDimensions: getFullHeightMedia,\n};\nconst BackgroundReveal = {\n    hasParallax: true,\n    getMediaDimensions: getFullHeightMedia,\n};\nconst BgCloseUp = { getMediaDimensions };\nconst BgExpand = { getMediaDimensions };\nconst BgFabeBack = { getMediaDimensions };\nconst BgFadeIn = { getMediaDimensions };\nconst BgFadeOut = { getMediaDimensions };\nconst BgFake3D = {\n    hasParallax: true,\n    getMediaDimensions: getFullHeightMedia,\n};\nconst BgPanLeft = {\n    getMediaDimensions: (width, height) => ({\n        width: width * (1 + panSpeed),\n        height,\n    }),\n};\nconst BgPanRight = {\n    getMediaDimensions: (width, height) => ({\n        width: width * (1 + panSpeed),\n        height,\n    }),\n};\nconst BgParallax = {\n    hasParallax: true,\n    getMediaDimensions: getFullHeightMedia,\n};\nconst BgPullBack = { getMediaDimensions };\nconst BgReveal = {\n    hasParallax: true,\n    getMediaDimensions: getFullHeightMedia,\n};\nconst BgRotate = {\n    getMediaDimensions: (width, height) => getMaxRotateBounds(width, height, rotateAngle),\n};\nconst BgShrink = { getMediaDimensions };\nconst BgSkew = {\n    getMediaDimensions: (width, height) => getMaxSkewYBounds(width, height, skewAngle),\n};\nconst BgUnwind = { getMediaDimensions };\nconst BgZoomIn = {\n    hasParallax: true,\n    getMediaDimensions: getFullHeightMedia,\n};\nconst BgZoomOut = {\n    getMediaDimensions: (width, height) => ({\n        width: width * zoomScale,\n        height: height * zoomScale,\n    }),\n};\nconst ImageParallax = {\n    getMediaDimensions: (width, height) => ({\n        width,\n        height: height * IMAGE_PARALLAX_HEIGHT_FACTOR,\n    }),\n};\nconst ImageReveal = {\n    getMediaDimensions: (width, _height, screenHeight) => ({\n        width,\n        height: screenHeight,\n    }),\n};\nexport { \n// Legacy\nBackgroundParallax, BackgroundParallaxZoom, BackgroundReveal, \n// New\nBgCloseUp, BgExpand, BgFabeBack, BgFadeIn, BgFadeOut, BgFake3D, BgPanLeft, BgPanRight, BgParallax, BgPullBack, BgReveal, BgRotate, BgShrink, BgSkew, BgUnwind, BgZoomIn, BgZoomOut, ImageParallax, ImageReveal, };\n//# sourceMappingURL=mediaResizeMap.js.map","import { alignTypes, fittingTypes, getData, isWEBP, getFileExtension, fileType, } from '@wix/image-kit';\nimport { camelToKebab } from '../utils';\nconst CSS_NUMERIC_VALUES = {\n    columnCount: 1,\n    columns: 1,\n    fontWeight: 1,\n    lineHeight: 1,\n    opacity: 1,\n    zIndex: 1,\n    zoom: 1,\n};\nconst pick = (obj, props) => {\n    const propsArr = Array.isArray(props) ? props : [props];\n    return propsArr.reduce((subObj, prop) => {\n        const val = obj[prop];\n        return val !== undefined ? Object.assign(subObj, { [prop]: val }) : subObj;\n    }, {});\n};\nconst addDefaultUnitIfNeeded = (prop, value) => typeof value === 'number' &&\n    !CSS_NUMERIC_VALUES[prop]\n    ? `${value}px`\n    : value.toString();\nconst setStyle = (node, styleProperties) => node &&\n    styleProperties &&\n    Object.keys(styleProperties).forEach((prop) => {\n        const styleProp = prop;\n        const propValue = styleProperties[styleProp];\n        if (propValue !== undefined) {\n            node.style[styleProp] = addDefaultUnitIfNeeded(styleProp, propValue);\n        }\n        else {\n            node.style.removeProperty(styleProp);\n        }\n    });\nconst getScreenHeight = (heightOverride) => heightOverride ||\n    document.documentElement.clientHeight ||\n    window.innerHeight ||\n    0;\nconst getImageComputedProperties = (extendedImageInfo, envConsts, htmlTag) => {\n    // todo: CLNT-5323 , wixapp sildergallery proxy is generating image data without uri\n    if (!extendedImageInfo.targetWidth ||\n        !extendedImageInfo.targetHeight ||\n        !extendedImageInfo.imageData.uri) {\n        return { uri: '', css: {}, transformed: false };\n    }\n    const { imageData } = extendedImageInfo;\n    const fittingType = extendedImageInfo.displayMode || fittingTypes.SCALE_TO_FILL;\n    const imageOptions = Object.assign(pick(imageData, ['upscaleMethod']), pick(extendedImageInfo, ['filters', 'encoding']), extendedImageInfo.quality || imageData.quality, {\n        hasAnimation: extendedImageInfo?.hasAnimation || imageData?.hasAnimation,\n    });\n    const devicePixelRatioFromData = extendedImageInfo.imageData.devicePixelRatio || envConsts.devicePixelRatio;\n    const devicePixelRatio = getDevicePixelRatio(devicePixelRatioFromData);\n    const src = Object.assign(pick(imageData, ['width', 'height', 'crop', 'name', 'focalPoint']), { id: imageData.uri });\n    const target = {\n        width: extendedImageInfo.targetWidth,\n        height: extendedImageInfo.targetHeight,\n        htmlTag: (htmlTag || 'img'),\n        pixelAspectRatio: devicePixelRatio,\n        alignment: extendedImageInfo.alignType || alignTypes.CENTER,\n    };\n    const imageComputedProperties = getData(fittingType, src, target, imageOptions);\n    imageComputedProperties.uri = getMediaUrlByContext(imageComputedProperties.uri, envConsts.staticMediaUrl, envConsts.mediaRootUrl);\n    return imageComputedProperties;\n};\nconst getMediaUrlByContext = (imageUri, staticMediaUrl, mediaRootUrl) => {\n    const isExternalUrl = /(^https?)|(^data)|(^blob)|(^\\/\\/)/.test(imageUri);\n    if (isExternalUrl) {\n        return imageUri;\n    }\n    let path = `${staticMediaUrl}/`;\n    if (imageUri) {\n        if (/^micons\\//.test(imageUri)) {\n            path = mediaRootUrl;\n        }\n        else if (/[^.]+$/.exec(imageUri)?.[0] === 'ico') {\n            // if the image is an icon then it's taken from a slightly different place\n            path = path.replace('media', 'ficons');\n        }\n    }\n    return path + imageUri;\n};\nconst getDevicePixelRatio = (devicePixelRatio) => {\n    // we should be able to force devicePixelRatio from url by using the query param -\n    const queryParams = window.location.search\n        .split('&')\n        .map((query) => query.split('='));\n    const devicePixelRatioQueryParam = queryParams.find((query) => query[0]?.toLowerCase().includes('devicepixelratio'));\n    const devicePixelRatioValueForceFromUrl = devicePixelRatioQueryParam?.[1]\n        ? Number(devicePixelRatioQueryParam[1])\n        : null;\n    return devicePixelRatioValueForceFromUrl || devicePixelRatio || 1;\n};\nconst getImageSrc = (imageNode) => imageNode.getAttribute('src');\nconst isTransformedWEBP = (imageNode, imageUri) => {\n    const src = getImageSrc(imageNode) || '';\n    const isTransformed = !!src.match(/.webp\\/v1\\//);\n    return isWEBP(imageUri) && isTransformed;\n};\nconst imageIsAnimated = (uri, hasAnimation) => getFileExtension(uri) === fileType.GIF ||\n    (getFileExtension(uri) === fileType.WEBP && hasAnimation);\nconst getMediaSizeQueryString = (media) => {\n    return Object.entries(media)\n        .filter(([_, value]) => value || value === 0)\n        .map(([key, value]) => `(${camelToKebab(key)}: ${value}px)`)\n        .join(' and ');\n};\nexport { \n// TODO(ameerabuf) - move methods that are not custom-element logic to a more general image util lib\ngetMediaSizeQueryString, getMediaUrlByContext, getScreenHeight, setStyle, getImageComputedProperties, getImageSrc, isTransformedWEBP, imageIsAnimated, };\n//# sourceMappingURL=utils.js.map","import { getScreenHeight, setStyle, getImageComputedProperties, getImageSrc, imageIsAnimated, } from './utils';\nconst MOBILE_SAFE_ADDRESSBAR_HEIGHT = 80;\nfunction getHeightOverride(height, mediaHeightOverrideType) {\n    // on mobile, documentElement.clientHeight changes when scrolling, because of address bar collapsing.\n    // avoiding re-fetching image by returning the same height\n    return mediaHeightOverrideType === 'fixed' ||\n        mediaHeightOverrideType === 'viewport'\n        ? document.documentElement.clientHeight + MOBILE_SAFE_ADDRESSBAR_HEIGHT\n        : height;\n}\nfunction computeScaleOverrides(imageStyle, targetScale = 1) {\n    return targetScale !== 1\n        ? {\n            ...imageStyle,\n            width: '100%',\n            height: '100%',\n        }\n        : imageStyle;\n}\n/**\n * compute specific overrides\n */\nfunction computeStyleOverrides(mediaHeightOverrideType, imageStyle, displayMode, targetScale, isResponsive) {\n    // image scaling override\n    const styleWithScale = computeScaleOverrides(imageStyle, targetScale);\n    if (isResponsive) {\n        delete styleWithScale.height;\n        styleWithScale.width = '100%';\n    }\n    if (!mediaHeightOverrideType) {\n        return styleWithScale;\n    }\n    // siteBackground on mobile\n    const style = { ...styleWithScale };\n    if (displayMode === 'fill') {\n        style.position = 'absolute';\n        style.top = '0';\n    }\n    else if (displayMode === 'fit') {\n        style.height = '100%';\n    }\n    if (mediaHeightOverrideType === 'fixed') {\n        // eliminates white gap when address bar is collapsing\n        style['will-change'] = 'transform';\n    }\n    // force image alignment to include top\n    if (style.objectPosition) {\n        style.objectPosition = imageStyle.objectPosition.replace(/(center|bottom)$/, 'top');\n    }\n    return style;\n}\nfunction getSourceSetsTargetHeightByEffect(sourceSets, offsetWidth, offsetHeight, screenHeight, services) {\n    const sourceSetsTargetHeights = {};\n    sourceSets.forEach(({ mediaQuery, scrollEffect }) => {\n        sourceSetsTargetHeights[mediaQuery] =\n            services.getMediaDimensionsByEffect?.(scrollEffect, offsetWidth, offsetHeight, screenHeight).height || offsetHeight;\n    });\n    return sourceSetsTargetHeights;\n}\nfunction computeSrcSets(measures, imageInfo, envConsts) {\n    const { sourceSets } = imageInfo;\n    if (!sourceSets || !sourceSets.length) {\n        return;\n    }\n    const mediaToUri = {};\n    sourceSets.forEach(({ mediaQuery, crop, focalPoint }) => {\n        const imageInfoClone = {\n            ...imageInfo,\n            targetHeight: (measures.sourceSetsTargetHeights || {})[mediaQuery] || 0,\n            imageData: {\n                ...imageInfo.imageData,\n                crop,\n                focalPoint,\n            },\n        };\n        const imageComputedProperties = getImageComputedProperties(imageInfoClone, envConsts, 'img');\n        mediaToUri[mediaQuery] = imageComputedProperties.uri || '';\n    });\n    return mediaToUri;\n}\nfunction measure(id, measures, domNodes, { containerElm, bgEffect = 'none', sourceSets, }, services) {\n    const innerImage = domNodes.image;\n    const wixImage = domNodes[id];\n    const screenHeight = getScreenHeight(services.getScreenHeightOverride?.());\n    // override positioning and scaling of image (SiteBackground mobile override behaviour)\n    const mediaHeightOverrideType = containerElm?.dataset\n        .mediaHeightOverrideType;\n    const hasBgEffect = (bgEffect && bgEffect !== 'none') ||\n        (sourceSets && sourceSets.some((srcset) => srcset.scrollEffect));\n    const sourceOfDimensions = (containerElm && hasBgEffect ? containerElm : wixImage); // default to self\n    const cssBgEffect = window\n        .getComputedStyle(wixImage)\n        .getPropertyValue('--bg-scrub-effect');\n    const { width, height } = services.getMediaDimensionsByEffect?.(cssBgEffect || bgEffect, sourceOfDimensions.offsetWidth, sourceOfDimensions.offsetHeight, screenHeight) || {\n        width: wixImage.offsetWidth,\n        height: wixImage.offsetHeight,\n    };\n    if (sourceSets) {\n        measures.sourceSetsTargetHeights = getSourceSetsTargetHeightByEffect(sourceSets, sourceOfDimensions.offsetWidth, sourceOfDimensions.offsetHeight, screenHeight, services);\n    }\n    if (!innerImage) {\n        return;\n    }\n    const imgSrc = getImageSrc(innerImage);\n    if (cssBgEffect) {\n        measures.top = 0.5 * (wixImage.offsetHeight - height);\n        measures.left = 0.5 * (wixImage.offsetWidth - width);\n    }\n    measures.width = width;\n    measures.height = getHeightOverride(height, mediaHeightOverrideType);\n    measures.screenHeight = screenHeight;\n    measures.imgSrc = imgSrc;\n    measures.boundingRect = wixImage.getBoundingClientRect();\n    measures.mediaHeightOverrideType = mediaHeightOverrideType;\n    measures.srcset = innerImage.srcset;\n}\nfunction patch(id, measures, domNodes, imageInfo, envConsts, loadImage, isResponsive, bgEffect, loadImageImmediately) {\n    if (!Object.keys(measures).length) {\n        return;\n    }\n    const { imageData } = imageInfo;\n    const wixImageNode = domNodes[id];\n    const image = domNodes.image;\n    // no retina scaling for background scroll effects\n    if (bgEffect) {\n        imageData.devicePixelRatio = 1;\n    }\n    const targetScale = imageInfo.targetScale || 1;\n    const extendedImageInfo = {\n        ...imageInfo,\n        ...(!imageInfo.skipMeasure && {\n            targetWidth: (measures.width || 0) * targetScale,\n            targetHeight: (measures.height || 0) * targetScale,\n        }),\n        displayMode: imageData.displayMode,\n    };\n    const imageComputedProperties = getImageComputedProperties(extendedImageInfo, envConsts, 'img');\n    const computedStyle = imageComputedProperties?.css?.img || {};\n    const imageStyle = computeStyleOverrides(measures.mediaHeightOverrideType, computedStyle, imageData.displayMode, targetScale, isResponsive);\n    setStyle(image, imageStyle);\n    if (measures.top || measures.left) {\n        setStyle(wixImageNode, {\n            top: `${measures.top}px`,\n            left: `${measures.left}px`,\n        });\n    }\n    const src = imageComputedProperties?.uri || '';\n    const hasAnimation = imageData?.hasAnimation || imageInfo?.hasAnimation;\n    const mediaToUri = computeSrcSets(measures, extendedImageInfo, envConsts);\n    if (loadImageImmediately) {\n        // flag that this image has been processed\n        image.dataset.ssrSrcDone = 'true';\n    }\n    if (imageInfo.isLQIP &&\n        imageInfo.lqipTransition &&\n        !('transitioned' in wixImageNode.dataset)) {\n        wixImageNode.dataset.transitioned = '';\n        if (image.complete) {\n            image.onload = function () {\n                image.dataset.loadDone = '';\n            };\n        }\n        else {\n            image.onload = function () {\n                if (image.complete) {\n                    image.dataset.loadDone = '';\n                }\n                else {\n                    image.onload = function () {\n                        image.dataset.loadDone = '';\n                    };\n                }\n            };\n        }\n    }\n    if (loadImage) {\n        if (imageIsAnimated(imageData.uri, hasAnimation)) {\n            image.setAttribute('fetchpriority', 'low');\n            image.setAttribute('loading', 'lazy');\n            image.setAttribute('decoding', 'async');\n        }\n        else {\n            image.setAttribute('fetchpriority', 'high');\n        }\n        image.currentSrc !== src && image.setAttribute('src', src);\n        const srcIsMissingFromSrcset = measures.srcset &&\n            !measures.srcset\n                .split(', ')\n                .some((source) => source.split(' ')[0] === src);\n        if (srcIsMissingFromSrcset) {\n            image.setAttribute('srcset', src);\n        }\n        if (domNodes.picture && extendedImageInfo.sourceSets) {\n            Array.from(domNodes.picture.querySelectorAll('source')).forEach((sourceNode) => {\n                const mediaQuery = sourceNode.media || '';\n                const uri = mediaToUri?.[mediaQuery];\n                if (sourceNode.srcset !== uri) {\n                    sourceNode.setAttribute('srcset', uri || '');\n                }\n            });\n        }\n    }\n}\nexport default {\n    measure,\n    patch,\n};\n//# sourceMappingURL=imageLayout.js.map","import { getImageSrc } from './utils';\nimport imageLayout from './imageLayout';\nconst TIMEOUT = 250;\nconst imageEffectMap = {\n    parallax: 'ImageParallax',\n    fixed: 'ImageReveal',\n};\nfunction wowImageFactory(services, environmentConsts, contextWindow) {\n    return class WowImage extends contextWindow.HTMLElement {\n        constructor() {\n            // eslint-disable-line no-useless-constructor\n            super();\n            this.childListObserver = null;\n            this.timeoutId = null;\n        }\n        attributeChangedCallback(_, oldValue) {\n            if (oldValue) {\n                this.reLayout();\n            }\n        }\n        connectedCallback() {\n            if (environmentConsts.disableImagesLazyLoading) {\n                this.reLayout();\n            }\n            else {\n                this.observeIntersect();\n            }\n        }\n        disconnectedCallback() {\n            this.unobserveResize();\n            this.unobserveIntersect();\n            this.unobserveChildren();\n        }\n        static get observedAttributes() {\n            return ['data-image-info'];\n        }\n        reLayout() {\n            const domNodes = {};\n            const measures = {};\n            const imageId = this.getAttribute('id');\n            const imageInfo = JSON.parse(this.dataset.imageInfo || '');\n            const isResponsive = this.dataset.isResponsive === 'true';\n            const { bgEffectName } = this.dataset;\n            const { scrollEffect } = imageInfo.imageData;\n            const { sourceSets } = imageInfo;\n            const bgEffect = bgEffectName || (scrollEffect && imageEffectMap[scrollEffect]);\n            if (sourceSets && sourceSets.length) {\n                sourceSets.forEach((sourceSet) => {\n                    if (sourceSet.scrollEffect) {\n                        sourceSet.scrollEffect =\n                            imageEffectMap[sourceSet.scrollEffect];\n                    }\n                });\n            }\n            domNodes[imageId] = this;\n            if (imageInfo.containerId) {\n                domNodes[imageInfo.containerId] = contextWindow.document.getElementById(`${imageInfo.containerId}`);\n            }\n            const containerElm = imageInfo.containerId\n                ? domNodes[imageInfo.containerId]\n                : undefined;\n            domNodes.image = this.querySelector('img');\n            domNodes.picture = this.querySelector('picture');\n            if (!domNodes.image) {\n                // missing children, can't layout, wait for children to be created first\n                const target = this;\n                this.observeChildren(target);\n                return;\n            }\n            // clean up\n            this.unobserveChildren();\n            // from now on just observe changes to children of top level\n            this.observeChildren(this);\n            services.mutationService.measure(() => {\n                imageLayout.measure(imageId, measures, domNodes, {\n                    containerElm,\n                    bgEffect,\n                    sourceSets,\n                }, services);\n            });\n            const patchImage = (shouldLoadImage, loadImageImmediately) => {\n                services.mutationService.mutate(() => {\n                    imageLayout.patch(imageId, measures, domNodes, imageInfo, environmentConsts, shouldLoadImage, isResponsive, bgEffect, loadImageImmediately);\n                });\n            };\n            const imageElement = domNodes.image;\n            const ssrSrcNeedProcessing = this.dataset.hasSsrSrc && !imageElement.dataset.ssrSrcDone;\n            // if image has no src or current src if from ssr render stage  -\n            // load the image immediately, otherwise - debounce the reload\n            const loadImageImmediately = !getImageSrc(imageElement) || ssrSrcNeedProcessing;\n            if (loadImageImmediately) {\n                patchImage(true, true);\n            }\n            else {\n                this.debounceImageLoad(patchImage);\n            }\n        }\n        /**\n         * Debounce consecutive image loads\n         *\n         * @param {function} patchImage closure for patching the image\n         */\n        debounceImageLoad(patchImage) {\n            clearTimeout(this.timeoutId);\n            this.timeoutId = contextWindow.setTimeout(() => {\n                patchImage(true);\n            }, TIMEOUT);\n            patchImage(false);\n        }\n        observeResize() {\n            services.resizeService?.observe(this);\n        }\n        unobserveResize() {\n            services.resizeService?.unobserve(this);\n        }\n        observeIntersect() {\n            services.intersectionService?.observe(this);\n        }\n        unobserveIntersect() {\n            services.intersectionService?.unobserve(this);\n        }\n        /**\n         * Observe DOM mutations to wait for addition of missing children\n         *\n         * @param {HTMLElement} parent\n         */\n        observeChildren(parent) {\n            if (!this.childListObserver) {\n                this.childListObserver = new contextWindow.MutationObserver(() => {\n                    this.reLayout();\n                });\n            }\n            this.childListObserver.observe(parent, { childList: true });\n        }\n        /**\n         * Remove DOM MutationObserver if one was created\n         */\n        unobserveChildren() {\n            if (this.childListObserver) {\n                this.childListObserver.disconnect();\n                this.childListObserver = null;\n            }\n        }\n    };\n}\nexport default wowImageFactory;\n//# sourceMappingURL=WowImage.js.map","import init from './custom-element/registry';\nconst getDevicePixelRatio = () => {\n    const isMSMobileDevice = /iemobile/i.test(navigator.userAgent);\n    if (isMSMobileDevice) {\n        return Math.round(window.screen.availWidth /\n            (window.screen.width || window.document.documentElement.clientWidth));\n    }\n    return window.devicePixelRatio;\n};\nconst STATIC_MEDIA_URL = 'https://static.wixstatic.com/media';\nconst MEDIA_ROOT_URL = 'https://static.wixstatic.com';\nfunction initCustomElement(services = {}, contextWindow = null, envConsts = {}) {\n    if (typeof window === 'undefined') {\n        return;\n    }\n    const env = {\n        staticMediaUrl: STATIC_MEDIA_URL,\n        mediaRootUrl: MEDIA_ROOT_URL,\n        experiments: {},\n        devicePixelRatio: getDevicePixelRatio(),\n        ...envConsts,\n    };\n    const define = init(contextWindow, services);\n    if (define) {\n        define(env);\n    }\n}\nexport { initCustomElement };\n//# sourceMappingURL=customElementInit.js.map","import wowImageFactory from './WowImage';\nimport fastdom from 'fastdom';\nexport default function init(contextWindow, services) {\n    const elementName = 'wow-image';\n    contextWindow = contextWindow || window;\n    if (contextWindow.customElements.get(elementName) === undefined) {\n        let resizeObserver;\n        if (contextWindow.ResizeObserver) {\n            resizeObserver = new contextWindow.ResizeObserver((entries) => entries.map((entry) => entry.target.reLayout()));\n        }\n        let intersectionObserver;\n        if (contextWindow.IntersectionObserver) {\n            intersectionObserver = new IntersectionObserver((entries) => entries.map((entry) => {\n                if (entry.isIntersecting) {\n                    const wowImage = entry.target;\n                    wowImage.unobserveIntersect();\n                    // resize Observe will invoke relayout imidiatly.\n                    // \"Observation will fire when observation starts if Element is being rendered, and Element’s size is not 0,0,\"\n                    // https://drafts.csswg.org/resize-observer/#dom-resizeobserver-observe\n                    wowImage.observeResize();\n                }\n                return entry;\n            }), {\n                /**\n                 * old: 50% from 1080 (desktop) is 540px, 800 (mobile) 400px\n                 * new: 150% from 1080 (desktop) is 1620, 800 (mobile) 1200\n                 * chrome [loading=lazy]: 4g - 1250px, lower then 3g - 2500px\n                 * @see https://web.dev/articles/browser-level-image-lazy-loading#improved-thresholds\n                 */\n                rootMargin: '150% 100%',\n            });\n        }\n        return function (env) {\n            const WowImage = wowImageFactory({\n                resizeService: resizeObserver,\n                intersectionService: intersectionObserver,\n                mutationService: fastdom,\n                ...services,\n            }, env, contextWindow);\n            contextWindow.customElements.define(elementName, WowImage);\n        };\n    }\n    return;\n}\n//# sourceMappingURL=registry.js.map","/**\n * Round a number to the closest multiply of 'step'\n *\n * @param step - The step value to round to\n * @param num - The number to round\n * @returns The rounded number\n */\nexport function round(step, num) {\n  const mod = step ? num % step : 0;\n  return mod > step / 2 ? num - mod + step : num - mod;\n}\n\n/**\n * Round with decimal precision, default round to integer\n *\n * @param num - The number to round\n * @param precision - The decimal precision (default: 0)\n * @returns The rounded number\n */\nexport const roundPrecision = function (num, precision) {\n  if (precision === void 0) {\n    precision = 0;\n  }\n  return +num.toFixed(precision);\n};\n\n/**\n * Limit a number between 2 values, inclusive\n *\n * @param min - The minimum value\n * @param max - The maximum value\n * @param num - The number to clamp\n * @returns The clamped number\n */\nexport function clamp(min, max, num) {\n  return Math.min(max, Math.max(min, num));\n}\n\n/**\n * Snap a number by distance to another number\n *\n * @param to - The target number to snap to\n * @param dist - The distance threshold\n * @param num - The number to snap\n * @returns The snapped number\n */\nexport function snap(to, dist, num) {\n  return Math.abs(num - to) <= dist ? to : num;\n}\n\n/**\n * Snap a number by distance every multiple of another number\n *\n * @param to - The target number to snap to\n * @param dist - The distance threshold\n * @param num - The number to snap\n * @returns The snapped number\n */\nexport function snapEvery(to, dist, num) {\n  const d1 = num % to;\n  const d2 = to - d1;\n  return d1 <= dist ? num - d1 : d2 <= dist ? num + d2 : num;\n}\n\n/**\n * Linear Interpolation\n * If t = 0 returns a, if t = 1 returns b, and transitions the value in-between\n *\n * @param a - The start value\n * @param b - The end value\n * @param t - The interpolation factor\n * @returns The interpolated value\n */\nexport function lerp(a, b, t) {\n  return a * (1 - t) + b * t;\n}\n\n/**\n * Map a value from one range 'a' to different range 'b'\n *\n * @param sourceMin - The minimum value of the source range\n * @param sourceMax - The maximum value of the source range\n * @param targetMin - The minimum value of the target range\n * @param targetMax - The maximum value of the target range\n * @param num - The number to map\n * @returns The mapped value\n */\nexport function mapRange(sourceMin, sourceMax, targetMin, targetMax, num) {\n  return (num - sourceMin) * (targetMax - targetMin) / (sourceMax - sourceMin) + targetMin;\n}\n\n/**\n * Map a number from a range to a fraction between 0 and 1\n *\n * @param start - The start value of the range\n * @param end - The end value of the range\n * @param num - The number to map\n * @returns The mapped value\n */\nexport function mapPercentage(start, end, num) {\n  return mapRange(start, end, 0, 1, num);\n}\n\n/**\n * Get the distance between 2 points\n *\n * @param p1 - The first point [x1, y1]\n * @param p2 - The second point [x2, y2]\n * @returns The distance between the two points\n */\nexport function distance(_ref, _ref2) {\n  let [x1, y1] = _ref;\n  let [x2, y2] = _ref2;\n  return Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n}\n\n/**\n * Convert degrees to radians\n *\n * @param angleInDeg - The angle in degrees\n * @returns The angle in radians\n */\nexport function deg2rad(angleInDeg) {\n  return angleInDeg * Math.PI / 180;\n}\n\n/**\n * Convert radians to degrees\n *\n * @param angleInRad - The angle in radians\n * @returns The angle in degrees\n */\nexport function rad2deg(angleInRad) {\n  return angleInRad * 180 / Math.PI;\n}\n\n/**\n * Get the angle between 2 points in degrees clamped between 0 and 360\n * Pass the third argument \"offset\" to rotate the angle source,\n * for example use 90 to move angle 0 to the top\n *\n * @param p1 - The first point [x1, y1]\n * @param p2 - The second point [x2, y2]\n * @param offset - The angle offset (default: 0)\n * @returns The angle between the two points in degrees\n */\nexport function getAngleInDeg(p1, p2, offset) {\n  if (p1 === void 0) {\n    p1 = [0, 0];\n  }\n  if (p2 === void 0) {\n    p2 = [0, 0];\n  }\n  if (offset === void 0) {\n    offset = 0;\n  }\n  const angle = Math.atan2(p2[1] - p1[1], p2[0] - p1[0]) * 180 / Math.PI;\n  return (360 + offset + angle) % 360;\n}\n//# sourceMappingURL=math-and-numbers.js.map"],"names":["getMediaDimensions","width","height","getFullHeightMedia","screenHeight","Math","max","BackgroundParallax","hasParallax","BackgroundParallaxZoom","BackgroundReveal","BgCloseUp","BgExpand","BgFabeBack","BgFadeIn","BgFadeOut","BgFake3D","BgPanLeft","BgPanRight","BgParallax","BgPullBack","BgReveal","BgRotate","angleInDeg","angleInRad","radius","hypot","travelAngle","acos","boundingWidth","abs","cos","sin","boundingHeight","ceil","getMaxRotateBounds","BgShrink","BgSkew","tan","getMaxSkewYBounds","BgUnwind","BgZoomIn","BgZoomOut","ImageParallax","ImageReveal","_height","CSS_NUMERIC_VALUES","columnCount","columns","fontWeight","lineHeight","opacity","zIndex","zoom","pick","obj","props","Array","isArray","reduce","subObj","prop","val","undefined","Object","assign","setStyle","node","styleProperties","keys","forEach","styleProp","propValue","style","value","toString","addDefaultUnitIfNeeded","removeProperty","getImageComputedProperties","extendedImageInfo","envConsts","htmlTag","targetWidth","targetHeight","imageData","uri","css","transformed","fittingType","displayMode","fittingTypes","SCALE_TO_FILL","imageOptions","quality","hasAnimation","devicePixelRatioFromData","devicePixelRatio","getDevicePixelRatio","src","id","target","pixelAspectRatio","alignment","alignType","alignTypes","CENTER","imageComputedProperties","getData","getMediaUrlByContext","staticMediaUrl","mediaRootUrl","imageUri","test","path","exec","replace","devicePixelRatioQueryParam","window","location","search","split","map","query","find","toLowerCase","includes","Number","getImageSrc","imageNode","getAttribute","measure","measures","domNodes","containerElm","bgEffect","sourceSets","services","innerImage","image","wixImage","heightOverride","getScreenHeightOverride","document","documentElement","clientHeight","innerHeight","mediaHeightOverrideType","dataset","hasBgEffect","some","srcset","scrollEffect","sourceOfDimensions","cssBgEffect","getComputedStyle","getPropertyValue","getMediaDimensionsByEffect","offsetWidth","offsetHeight","sourceSetsTargetHeights","mediaQuery","getSourceSetsTargetHeightByEffect","imgSrc","top","left","getHeightOverride","boundingRect","getBoundingClientRect","patch","imageInfo","loadImage","isResponsive","loadImageImmediately","length","wixImageNode","targetScale","skipMeasure","computedStyle","img","imageStyle","styleWithScale","computeScaleOverrides","position","objectPosition","computeStyleOverrides","mediaToUri","crop","focalPoint","imageInfoClone","computeSrcSets","ssrSrcDone","isLQIP","lqipTransition","transitioned","complete","onload","loadDone","getFileExtension","fileType","GIF","WEBP","imageIsAnimated","setAttribute","currentSrc","source","picture","from","querySelectorAll","sourceNode","media","imageEffectMap","parallax","fixed","environmentConsts","contextWindow","HTMLElement","constructor","super","this","childListObserver","timeoutId","attributeChangedCallback","_","oldValue","reLayout","connectedCallback","disableImagesLazyLoading","observeIntersect","disconnectedCallback","unobserveResize","unobserveIntersect","unobserveChildren","observedAttributes","imageId","JSON","parse","bgEffectName","sourceSet","containerId","getElementById","querySelector","observeChildren","mutationService","imageLayout","patchImage","shouldLoadImage","mutate","imageElement","ssrSrcNeedProcessing","hasSsrSrc","debounceImageLoad","clearTimeout","setTimeout","observeResize","resizeService","observe","unobserve","intersectionService","parent","MutationObserver","childList","disconnect","navigator","userAgent","round","screen","availWidth","clientWidth","STATIC_MEDIA_URL","MEDIA_ROOT_URL","initCustomElement","env","experiments","define","elementName","customElements","get","resizeObserver","intersectionObserver","ResizeObserver","entries","entry","IntersectionObserver","isIntersecting","wowImage","rootMargin","WowImage","init","mapRange","sourceMin","sourceMax","targetMin","targetMax","num","distance","_ref","_ref2","x1","y1","x2","y2","sqrt","deg2rad","PI","getAngleInDeg","p1","p2","offset","atan2"],"sourceRoot":""}    